#compdef wallust

autoload -U is-at-least

_wallust() {
    typeset -A opt_args
    typeset -a _arguments_options
    local ret=1

    if is-at-least 5.2; then
        _arguments_options=(-s -S -C)
    else
        _arguments_options=(-s -C)
    fi

    local context curcontext="$curcontext" state line
    _arguments "${_arguments_options[@]}" : \
'(-s --skip-sequences)*-I+[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-s --skip-sequences)*--ignore-sequence=[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-d --config-dir)-C+[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-d --config-dir)--config-file=[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-C --config-file --templates-dir)-d+[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-C --config-file --templates-dir)--config-dir=[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-d --config-dir)--templates-dir=[Uses TEMPLATE_DIR as the template directory]:TEMPLATES_DIR:_files' \
'-q[Don'\''t print anything]' \
'--quiet[Don'\''t print anything]' \
'(-u --update-current -I --ignore-sequence)-s[Skip setting terminal sequences]' \
'(-u --update-current -I --ignore-sequence)--skip-sequences[Skip setting terminal sequences]' \
'-T[Skip templating process]' \
'--skip-templates[Skip templating process]' \
'(-s --skip-sequences)-u[Only update the current terminal]' \
'(-s --skip-sequences)--update-current[Only update the current terminal]' \
'(-C --config-file -d --config-dir)-N[Won'\''t read the config and avoids creating it'\''s config path]' \
'(-C --config-file -d --config-dir)--no-config[Won'\''t read the config and avoids creating it'\''s config path]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
'-V[Print version]' \
'--version[Print version]' \
":: :_wallust_commands" \
"*::: :->wallust" \
&& ret=0
    case $state in
    (wallust)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:wallust-command-$line[1]:"
        case $line[1] in
            (run)
_arguments "${_arguments_options[@]}" : \
'-a+[Alpha *template variable* value, used only for templating (default is 100)]:ALPHA:_default' \
'--alpha=[Alpha *template variable* value, used only for templating (default is 100)]:ALPHA:_default' \
'-b+[Choose which backend to use (overwrites config)]:BACKEND:((full\:"Read and return the whole image pixels (more precision, slower)"
resized\:"Resizes the image before parsing, mantaining it'\''s aspect ratio"
wal\:"Uses image magick \`convert\` to generate the colors, like pywal"
thumb\:"Faster algo hardcoded to 512x512 (no ratio respected)"
fastresize\:"A much faster resize algo that uses SIMD. For some reason it fails on some images where \`resized\` doesn'\''t, for this reason it doesn'\''t *replace* but rather it'\''s a new option"
kmeans\:"Kmeans is an algo that divides and picks pixels all around the image, giving a more diverse look"))' \
'--backend=[Choose which backend to use (overwrites config)]:BACKEND:((full\:"Read and return the whole image pixels (more precision, slower)"
resized\:"Resizes the image before parsing, mantaining it'\''s aspect ratio"
wal\:"Uses image magick \`convert\` to generate the colors, like pywal"
thumb\:"Faster algo hardcoded to 512x512 (no ratio respected)"
fastresize\:"A much faster resize algo that uses SIMD. For some reason it fails on some images where \`resized\` doesn'\''t, for this reason it doesn'\''t *replace* but rather it'\''s a new option"
kmeans\:"Kmeans is an algo that divides and picks pixels all around the image, giving a more diverse look"))' \
'-c+[Choose which colorspace to use (overwrites config)]:COLORSPACE:((lab\:"Uses Cie L*a*b color space"
labmixed\:"Variant of \`lab\` that mixes the colors gathered, if not enough colors it fallbacks to usual lab (not recommended in small images)"
lch\:"CIE Lch, you can understand this color space like LAB but with chrome and hue added. Could help when sorting"
lchmixed\:"CIE Lch variant that mixed on every similar color"
lchansi\:"Variant of Lch which preserves 8 colors\: black, red, green, yellow, blue, magenta, cyan and gray. This works best with '\''darkansi'\'' palette, allowing a constant color order"))' \
'--colorspace=[Choose which colorspace to use (overwrites config)]:COLORSPACE:((lab\:"Uses Cie L*a*b color space"
labmixed\:"Variant of \`lab\` that mixes the colors gathered, if not enough colors it fallbacks to usual lab (not recommended in small images)"
lch\:"CIE Lch, you can understand this color space like LAB but with chrome and hue added. Could help when sorting"
lchmixed\:"CIE Lch variant that mixed on every similar color"
lchansi\:"Variant of Lch which preserves 8 colors\: black, red, green, yellow, blue, magenta, cyan and gray. This works best with '\''darkansi'\'' palette, allowing a constant color order"))' \
'-f+[Choose which fallback generation method to use (overwrites config)]:FALLBACK_GENERATOR:((interpolate\:"uses \[\`interpolate\`\]"
complementary\:"uses \[\`complementary\`\]"))' \
'--fallback-generator=[Choose which fallback generation method to use (overwrites config)]:FALLBACK_GENERATOR:((interpolate\:"uses \[\`interpolate\`\]"
complementary\:"uses \[\`complementary\`\]"))' \
'-p+[Choose which palette to use (overwrites config)]:PALETTE:((dark\:"8 dark colors, dark background and light contrast"
dark16\:"Same as \`dark\` but uses the 16 colors trick"
darkcomp\:"This is a \`dark\` variant that changes all colors to it'\''s complementary counterpart, giving the feeling of a '\''new palette'\'' but that still makes sense with the image provided"
darkcomp16\:"16 variation of the dark complementary variant"
ansidark\:"This is not a '\''dark'\'' variant, is a new palette that is meant to work with \`lchansi\` colorspace, which will maintain '\''tty'\'' like color order and only adjusting the colors acording to the theme. A possible solution for LS_COLORS and the like. Should workout with other colorspace, but the result may not be optimal"
ansidark16\:"The ansidark palette with 16 color variation"
harddark\:"Same as \`dark\` with hard hue colors"
harddark16\:"Harddark with 16 color variation"
harddarkcomp\:"complementary colors variation of harddark scheme"
harddarkcomp16\:"complementary colors variation of harddark scheme"
light\:"Light bg, dark fg"
light16\:"Same as \`light\` but uses the 16 color trick"
lightcomp\:"complementary colors variation of light"
lightcomp16\:"complementary colors variation of light with the 16 color variation"
softdark\:"Variant of softlight, uses the lightest colors and a dark background (could be interpreted as \`dark\` inversed)"
softdark16\:"softdark with 16 color variation"
softdarkcomp\:"complementary variation for softdark"
softdarkcomp16\:"complementary variation for softdark with the 16 color variation"
softlight\:"Light with soft pastel colors, counterpart of \`harddark\`"
softlight16\:"softlight with 16 color variation"
softlightcomp\:"softlight with complementary colors"
softlightcomp16\:"softlight with complementary colors with 16 colors"))' \
'--palette=[Choose which palette to use (overwrites config)]:PALETTE:((dark\:"8 dark colors, dark background and light contrast"
dark16\:"Same as \`dark\` but uses the 16 colors trick"
darkcomp\:"This is a \`dark\` variant that changes all colors to it'\''s complementary counterpart, giving the feeling of a '\''new palette'\'' but that still makes sense with the image provided"
darkcomp16\:"16 variation of the dark complementary variant"
ansidark\:"This is not a '\''dark'\'' variant, is a new palette that is meant to work with \`lchansi\` colorspace, which will maintain '\''tty'\'' like color order and only adjusting the colors acording to the theme. A possible solution for LS_COLORS and the like. Should workout with other colorspace, but the result may not be optimal"
ansidark16\:"The ansidark palette with 16 color variation"
harddark\:"Same as \`dark\` with hard hue colors"
harddark16\:"Harddark with 16 color variation"
harddarkcomp\:"complementary colors variation of harddark scheme"
harddarkcomp16\:"complementary colors variation of harddark scheme"
light\:"Light bg, dark fg"
light16\:"Same as \`light\` but uses the 16 color trick"
lightcomp\:"complementary colors variation of light"
lightcomp16\:"complementary colors variation of light with the 16 color variation"
softdark\:"Variant of softlight, uses the lightest colors and a dark background (could be interpreted as \`dark\` inversed)"
softdark16\:"softdark with 16 color variation"
softdarkcomp\:"complementary variation for softdark"
softdarkcomp16\:"complementary variation for softdark with the 16 color variation"
softlight\:"Light with soft pastel colors, counterpart of \`harddark\`"
softlight16\:"softlight with 16 color variation"
softlightcomp\:"softlight with complementary colors"
softlightcomp16\:"softlight with complementary colors with 16 colors"))' \
'--saturation=[Add saturation from 1% to 100% (overwrites config)]:SATURATION:_default' \
'-t+[Choose a custom threshold, between 1 and 100 (overwrites config)]:THRESHOLD:_default' \
'--threshold=[Choose a custom threshold, between 1 and 100 (overwrites config)]:THRESHOLD:_default' \
'(-s --skip-sequences)*-I+[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-s --skip-sequences)*--ignore-sequence=[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-d --config-dir)-C+[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-d --config-dir)--config-file=[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-C --config-file --templates-dir)-d+[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-C --config-file --templates-dir)--config-dir=[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-d --config-dir)--templates-dir=[Uses TEMPLATE_DIR as the template directory]:TEMPLATES_DIR:_files' \
'-k[Ensure a readable contrast by checking colors in reference to the background (overwrites config)]' \
'--check-contrast[Ensure a readable contrast by checking colors in reference to the background (overwrites config)]' \
'-n[Don'\''t cache the results]' \
'--no-cache[Don'\''t cache the results]' \
'(-t --threshold)--dynamic-threshold[Dynamically changes the threshold to be best fit]' \
'-w[Generates colors even if there is a cache version of it]' \
'--overwrite-cache[Generates colors even if there is a cache version of it]' \
'-q[Don'\''t print anything]' \
'--quiet[Don'\''t print anything]' \
'(-u --update-current -I --ignore-sequence)-s[Skip setting terminal sequences]' \
'(-u --update-current -I --ignore-sequence)--skip-sequences[Skip setting terminal sequences]' \
'-T[Skip templating process]' \
'--skip-templates[Skip templating process]' \
'(-s --skip-sequences)-u[Only update the current terminal]' \
'(-s --skip-sequences)--update-current[Only update the current terminal]' \
'(-C --config-file -d --config-dir)-N[Won'\''t read the config and avoids creating it'\''s config path]' \
'(-C --config-file -d --config-dir)--no-config[Won'\''t read the config and avoids creating it'\''s config path]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
':file -- Path to the image to use:_files' \
&& ret=0
;;
(cs)
_arguments "${_arguments_options[@]}" : \
'-f+[Specify a custom format. Without this option, wallust will sequentially try to decode it by trying one by one]:FORMAT:((pywal\:"uses the wal colorscheme format, see <https\://github.com/dylanaraps/pywal/tree/master/pywal/colorschemes>"
terminal-sexy\:"uses <https\://terminal.sexy> JSON export"
wallust\:"cached wallust files"))' \
'--format=[Specify a custom format. Without this option, wallust will sequentially try to decode it by trying one by one]:FORMAT:((pywal\:"uses the wal colorscheme format, see <https\://github.com/dylanaraps/pywal/tree/master/pywal/colorschemes>"
terminal-sexy\:"uses <https\://terminal.sexy> JSON export"
wallust\:"cached wallust files"))' \
'(-s --skip-sequences)*-I+[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-s --skip-sequences)*--ignore-sequence=[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-d --config-dir)-C+[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-d --config-dir)--config-file=[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-C --config-file --templates-dir)-d+[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-C --config-file --templates-dir)--config-dir=[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-d --config-dir)--templates-dir=[Uses TEMPLATE_DIR as the template directory]:TEMPLATES_DIR:_files' \
'-q[Don'\''t print anything]' \
'--quiet[Don'\''t print anything]' \
'(-u --update-current -I --ignore-sequence)-s[Skip setting terminal sequences]' \
'(-u --update-current -I --ignore-sequence)--skip-sequences[Skip setting terminal sequences]' \
'-T[Skip templating process]' \
'--skip-templates[Skip templating process]' \
'(-s --skip-sequences)-u[Only update the current terminal]' \
'(-s --skip-sequences)--update-current[Only update the current terminal]' \
'(-C --config-file -d --config-dir)-N[Won'\''t read the config and avoids creating it'\''s config path]' \
'(-C --config-file -d --config-dir)--no-config[Won'\''t read the config and avoids creating it'\''s config path]' \
'-h[Print help (see more with '\''--help'\'')]' \
'--help[Print help (see more with '\''--help'\'')]' \
':colorscheme -- Name of the scheme inside `wallust/colorschemes` directory or the name of a theme:_default' \
&& ret=0
;;
(theme)
_arguments "${_arguments_options[@]}" : \
'(-s --skip-sequences)*-I+[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-s --skip-sequences)*--ignore-sequence=[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-d --config-dir)-C+[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-d --config-dir)--config-file=[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-C --config-file --templates-dir)-d+[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-C --config-file --templates-dir)--config-dir=[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-d --config-dir)--templates-dir=[Uses TEMPLATE_DIR as the template directory]:TEMPLATES_DIR:_files' \
'-p[Only preview the selected theme]' \
'--preview[Only preview the selected theme]' \
'-q[Don'\''t print anything]' \
'--quiet[Don'\''t print anything]' \
'(-u --update-current -I --ignore-sequence)-s[Skip setting terminal sequences]' \
'(-u --update-current -I --ignore-sequence)--skip-sequences[Skip setting terminal sequences]' \
'-T[Skip templating process]' \
'--skip-templates[Skip templating process]' \
'(-s --skip-sequences)-u[Only update the current terminal]' \
'(-s --skip-sequences)--update-current[Only update the current terminal]' \
'(-C --config-file -d --config-dir)-N[Won'\''t read the config and avoids creating it'\''s config path]' \
'(-C --config-file -d --config-dir)--no-config[Won'\''t read the config and avoids creating it'\''s config path]' \
'-h[Print help]' \
'--help[Print help]' \
':theme -- A custom built in theme to choose from:(3024-Day 3024-Night Aci Acme Aco Adventure-Time Afterglow Alien-Blood Apprentice Argonaut Arthur Astrodark Atelier-Cave Atelier-Dune Atelier-Estuary Atelier-Forest Atelier-Heath Atelier-Lakeside Atelier-Plateau Atelier-Savanna Atelier-Seaside Atelier-Sulphurpool Atom Aura Ayaka Ayu-Dark Ayu-Light Ayu-Mirage Azu Base2Tone-Cave Base2Tone-Desert Base2Tone-Drawbridge Base2Tone-Earth Base2Tone-Evening Base2Tone-Field Base2Tone-Forest Base2Tone-Garden Base2Tone-Heath Base2Tone-Lake Base2Tone-Lavender Base2Tone-Mall Base2Tone-Meadow Base2Tone-Morning Base2Tone-Motel Base2Tone-Pool Base2Tone-Porch Base2Tone-Sea Base2Tone-Space Base2Tone-Suburb Base4Tone-Classic-A Base4Tone-Classic-B Base4Tone-Classic-C Base4Tone-Classic-D Base4Tone-Classic-E Base4Tone-Classic-F Base4Tone-Classic-I Base4Tone-Classic-L Base4Tone-Classic-O Base4Tone-Classic-P Base4Tone-Classic-Q Base4Tone-Classic-R Base4Tone-Classic-S Base4Tone-Classic-T Base4Tone-Classic-U Base4Tone-Classic-W Base4Tone-Modern-C Base4Tone-Modern-N Base4Tone-Modern-W Belafonte-Day Belafonte-Night Bim Birds-Of-Paradise Blazer Blue-Dolphin Blue-Moon Blue-Moon-Light Bluloco-Light Bluloco-Zsh-Light Borland Breadog Breath Breath-Darker Breath-Light Breath-Silverfox Breeze Broadcast Brogrammer Butrin C64 Cai Campbell Catppuccin-Frappé Catppuccin-Latte Catppuccin-Macchiato Catppuccin-Mocha Chalk Chalkboard Chameleon Ciapre City-Lights Clone-Of-Ubuntu Clrs Cobalt-2 Cobalt-Neon Colorcli Crayon-Pony-Fish Dark-Pastel Darkside Dehydration Desert Dimmed-Monokai Dissonance Doom-One Dracula Earthsong Elemental Elementary Elic Elio Espresso Espresso-Libre Everblush Everforest-Dark-Hard Everforest-Dark-Medium Everforest-Dark-Soft Everforest-Light-Hard Everforest-Light-Medium Everforest-Light-Soft Fairy-Floss Fairy-Floss-Dark Fishtank Flat Flat-Remix Flatland Flexoki-Dark Flexoki-Light Foxnightly Freya Frontend-Delight Frontend-Fun-Forrest Frontend-Galaxy Geohot Github-Dark Github-Light Gogh Gooey Google-Dark Google-Light Gotham Grape Grass Gruvbox Gruvbox-Dark Gruvbox-Material-Dark Gruvbox-Material-Light Hardcore Harper Hemisu-Dark Hemisu-Light Highway Hipster-Green Homebrew Homebrew-Light Homebrew-Ocean Horizon-Bright Horizon-Dark Hurtado Hybrid Ibm-3270-High-Contrast Ibm3270 Ic-Green-Ppl Ic-Orange-Ppl Iceberg Idle-Toes Ir-Black Jackie-Brown Japanesque Jellybeans Jup Kanagawa-Dragon Kanagawa-Lotus Kanagawa-Wave Kibble Kokuban Laserwave Later-This-Evening Lavandula Liquid-Carbon Liquid-Carbon-Transparent Lunaria-Dark Lunaria-Eclipse Lunaria-Light Maia Man-Page Mar Material Mathias Medallion Minimalist-Dark Miramare Misterioso Modus-Operandi Modus-Operandi-Tinted Modus-Vivendi Modus-Vivendi-Tinted Molokai Mona-Lisa Mono-Amber Mono-Cyan Mono-Green Mono-Red Mono-White Mono-Yellow Monokai-Dark Monokai-Pro Monokai-Pro-Ristretto Monokai-Soda Moonfly Morada N0Tch2K Nanosecond Neon-Night Neopolitan Nep Neutron Night-Owl Nightfly Nightlion-V1 Nightlion-V2 Nighty Nord Nord-Light Novel Obsidian Ocean-Dark Oceanic-Next Ollie Omni One-Dark One-Half-Black One-Light Oxocarbon-Dark Palenight Pali Panda Paper Papercolor-Dark Papercolor-Light Paraiso-Dark Paul-Millr Pencil-Dark Pencil-Light Peppermint Pixiefloss Pnevma Powershell Predawn Pro Purple-People-Eater Quiet Red-Alert Red-Sands Relaxed Rippedcasts Rosé-Pine Rosé-Pine-Dawn Rosé-Pine-Moon Royal Sat Sea-Shells Seafoam-Pastel Selenized-Black Selenized-Dark Selenized-Light Selenized-White Seoul256 Seoul256-Light Seti Shaman Shel Slate Smyck Snazzy Soft-Server Solarized-Darcula Solarized-Dark Solarized-Dark-Higher-Contrast Solarized-Light Sonokai Spacedust Spacegray Spacegray-Eighties Spacegray-Eighties-Dull Sparky Spring Square Srcery Summer-Pop Sundried Sweet-Eliverlara Sweet-Terminal Symphonic Synthwave Synthwave-Alpha Teerb Tempus-Autumn Tempus-Classic Tempus-Dawn Tempus-Day Tempus-Dusk Tempus-Fugit Tempus-Future Tempus-Night Tempus-Past Tempus-Rift Tempus-Spring Tempus-Summer Tempus-Tempest Tempus-Totus Tempus-Warp Tempus-Winter Tender Terminal-Basic Terminix-Dark Thayer-Bright Tin Tokyo-Night Tokyo-Night-Light Tokyo-Night-Storm Tomorrow Tomorrow-Night Tomorrow-Night-Blue Tomorrow-Night-Bright Tomorrow-Night-Eighties Toy-Chest Treehouse Twilight Ura Urple Vag Vaombe Vaughn Vibrant-Ink Vs-Code-Dark+ Vs-Code-Light+ Warm-Neon Website Wez Wild-Cherry Wombat Wryan Wzoreck Zenburn dkeg-petal base16-paraiso sexy-s3r0-modified sexy-rasi solarized-dark sexy-muse base16-rebecca base16-classic-dark dkeg-leaf dkeg-harbing base16-atelier-forest-light sexy-simple_rainbow base16-bright base16-embers base16-chalk dkeg-flapr sexy-tangoesque base16-twilight sexy-visibone base16-brewer sexy-x-dotshare sexy-astromouse dkeg-bulb base16-summerfruit-light dkeg-chaires base16-black-metal-funeral base16-black-metal-burzum base16-codeschool base16-cupcake tempus_autumn dkeg-link sexy-gslob-nature-suede sexy-hybrid base16-materialer-dark dkeg-view dkeg-blumune base16-zenburn base16-gruvbox-pale dkeg-sprout sexy-mikado dkeg-scag base16-macintosh base16-black-metal-khold base16-atelier-plateau-dark base16-unikitty-light base16-google-light base16-materialer-light base16-pop base16-flat base16tooth base16-black-metal-venom base16-atelier-sulphurpool-dark base16-atelier-estuary-light sexy-zenburn base16-eighties sexy-eqie6 base16-3024 sexy-dwmrob base16-black-metal-marduk dkeg-brownstone dkeg-escen sexy-user-77-mashup-colors base16-mocha base16-mexico tempus_dusk base16-grayscale-light dkeg-novmbr dkeg-urban tempus_rift sexy-thwump dkeg-transposet tempus_future dkeg-stv base16-railscasts sexy-mikazuki base16-tomorrow base16-unikitty-dark sexy-jasonwryan dkeg-tealights base16-solarflare dkeg-raild sexy-invisibone base16-material-palenight dkeg-scape base16-black-metal-gorgoroth base16-solarized-light base16-black-metal-bathory base16-outrun dkeg-bark dkeg-spire sexy-sexcolors base16-woodland dkeg-simplicity base16-monokai base16-mellow-purple base16-xcode-dusk base16-porple base16-isotope dkeg-fendr dkeg-sundr sexy-nancy base16-classic-light dkeg-5725 base16-atelier-lakeside-dark sexy-navy-and-ivory 3024-light monokai base16-oceanicnext sexy-euphrasia sexy-visibone-alt-2 dkeg-mattd base16-atelier-seaside-light base16-atelier-savanna-light base16-atelier-heath-light dkeg-vans dkeg-coco sexy-gjm sexy-kasugano base16-atelier-sulphurpool-light base16-nord base16-black-metal-nile base16-tomorrow-night sexy-material base16-cupertino sexy-tlh srcery base16-phd base16-github tempus_summer base16-gruvbox-soft-dark base16-bespin sexy-rydgel dkeg-forst dkeg-slate sexy-theme2 base16-marrakesh sexy-colorfulcolors sexy-neon dkeg-diner base16-apathy sexy-gnometerm sexy-parker_brothers sexy-mostly-bright sexy-doomicideocean base16-atelier-dune-light zenburn sexy-rezza dkeg-relax ashes-light dkeg-provrb dkeg-skigh base16-tube dkeg-amiox sexy-numixdarkest base16-atelier-forest-dark sexy-pretty-and-pastel sexy-splurge base16-irblack base16-materia base16-gruvbox-hard-light dkeg-owl base16-atelier-heath-dark sexy-insignificato gruvbox darktooth sexy-trim-yer-beard sexy-dotshare dkeg-designr dkeg-poly base16-brushtrees base16-dracula base16-atelier-lakeside-light tempus_totus base16-atelier-cave-dark sexy-hund tempus_fugit base16-black-metal-mayhem base16-default-light dkeg-shade base16-default-dark vscode base16-atelier-plateau-light base16-hopscotch base16-grayscale-dark base16-atelier-estuary-dark base16-icy 3024-dark sexy-cloud rose-pine sexy-phrak1 base16-snazzy rose-pine-moon sexy-deafened dkeg-fury dkeg-blok base16-summerfruit-dark base16-pico sexy-sweetlove sexy-belge dkeg-victory sexy-bitmute base16-spacemacs sexy-orangish tempus_dawn dkeg-blend dkeg-book github base16-circus base16-gruvbox-medium-dark dkeg-prevail dkeg-depth base16-black-metal-immortal dkeg-soundwave sexy-gotham base16-atelier-seaside-dark tempus_warp base16-onedark dkeg-pastely base16-harmonic-light sexy-vacuous2 tempus_winter base16-atelier-savanna-dark base16-ashes rose-pine-dawn sexy-swayr sexy-digerati base16-google-dark sexy-monokai dkeg-branch dkeg-squares sexy-tartan tempus_spring base16-one base16-black-metal tempus_past base16-gruvbox-medium-light dkeg-bluetype base16-atelier-cave-light dkeg-subtle solarized-light base16-gruvbox-hard-dark base16-atelier-dune-dark sexy-tango dkeg-wintry base16-greenscreen base16-harmonic-dark base16-ocean dkeg-parkd sexy-derp dkeg-paints ashes-dark dkeg-kit base16-solarized-dark base16-seti sexy-dawn base16-gruvbox-soft-light hybrid-material dkeg-corduroy dkeg-traffic base16-shapeshifter base16-material random list)' \
&& ret=0
;;
(migrate)
_arguments "${_arguments_options[@]}" : \
'(-s --skip-sequences)*-I+[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-s --skip-sequences)*--ignore-sequence=[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-d --config-dir)-C+[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-d --config-dir)--config-file=[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-C --config-file --templates-dir)-d+[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-C --config-file --templates-dir)--config-dir=[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-d --config-dir)--templates-dir=[Uses TEMPLATE_DIR as the template directory]:TEMPLATES_DIR:_files' \
'-q[Don'\''t print anything]' \
'--quiet[Don'\''t print anything]' \
'(-u --update-current -I --ignore-sequence)-s[Skip setting terminal sequences]' \
'(-u --update-current -I --ignore-sequence)--skip-sequences[Skip setting terminal sequences]' \
'-T[Skip templating process]' \
'--skip-templates[Skip templating process]' \
'(-s --skip-sequences)-u[Only update the current terminal]' \
'(-s --skip-sequences)--update-current[Only update the current terminal]' \
'(-C --config-file -d --config-dir)-N[Won'\''t read the config and avoids creating it'\''s config path]' \
'(-C --config-file -d --config-dir)--no-config[Won'\''t read the config and avoids creating it'\''s config path]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(debug)
_arguments "${_arguments_options[@]}" : \
'(-s --skip-sequences)*-I+[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-s --skip-sequences)*--ignore-sequence=[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-d --config-dir)-C+[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-d --config-dir)--config-file=[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-C --config-file --templates-dir)-d+[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-C --config-file --templates-dir)--config-dir=[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-d --config-dir)--templates-dir=[Uses TEMPLATE_DIR as the template directory]:TEMPLATES_DIR:_files' \
'-q[Don'\''t print anything]' \
'--quiet[Don'\''t print anything]' \
'(-u --update-current -I --ignore-sequence)-s[Skip setting terminal sequences]' \
'(-u --update-current -I --ignore-sequence)--skip-sequences[Skip setting terminal sequences]' \
'-T[Skip templating process]' \
'--skip-templates[Skip templating process]' \
'(-s --skip-sequences)-u[Only update the current terminal]' \
'(-s --skip-sequences)--update-current[Only update the current terminal]' \
'(-C --config-file -d --config-dir)-N[Won'\''t read the config and avoids creating it'\''s config path]' \
'(-C --config-file -d --config-dir)--no-config[Won'\''t read the config and avoids creating it'\''s config path]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(pywal)
_arguments "${_arguments_options[@]}" : \
'-a+[Set terminal background transparency. *Only works in URxvt*]:alpha:_default' \
'-b+[Custom background color to use]:background:_default' \
'--backend=[Which color backend to use]:[backend]:_default' \
'-f+[Which colorscheme file to use. Use '\''wal --theme'\'' to list builtin themes]:theme:_default' \
'--theme=[Which colorscheme file to use. Use '\''wal --theme'\'' to list builtin themes]:theme:_default' \
'--saturate=[Set the color saturation]:0.0 - 1.0:_default' \
'-i+[Which image or directory to use]:/path/to/img.jpg:_files' \
'-o+[External script to run after "wal"]:script_name:_default' \
'(-s --skip-sequences)*-I+[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-s --skip-sequences)*--ignore-sequence=[Won'\''t send these colors sequences]:IGNORE_SEQUENCE:(background foreground cursor color0 color1 color2 color3 color4 color5 color6 color7 color8 color9 color10 color11 color12 color13 color14 color15)' \
'(-d --config-dir)-C+[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-d --config-dir)--config-file=[Use CONFIG_FILE as the config file]:CONFIG_FILE:_files' \
'(-C --config-file --templates-dir)-d+[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-C --config-file --templates-dir)--config-dir=[Uses CONFIG_DIR as the config directory, which holds both \`wallust.toml\` and the templates files (if existent)]:CONFIG_DIR:_files' \
'(-d --config-dir)--templates-dir=[Uses TEMPLATE_DIR as the template directory]:TEMPLATES_DIR:_files' \
'--iterative[When pywal is given a directory as input and this flag is used\: Go through the images in order instead of shuffled]' \
'--preview[Print the current color palette]' \
'--vte[Fix text-artifacts printed in VTE terminals]' \
'-c[Delete all cached colorschemes]' \
'-l[Generate a light colorscheme]' \
'-n[Skip setting the wallpaper]' \
'-q[Quiet mode, don'\''t print anything]' \
'-r['\''wal -r'\'' is deprecated\: Use (cat ~/.cache/wal/sequences &) instead]' \
'-R[Restore previous colorscheme]' \
'-s[Skip changing colors in terminals]' \
'-t[Skip changing colors in tty]' \
'-v[Print "wal" version]' \
'-e[Skip reloading gtk/xrdb/i3/sway/polybar]' \
'-T[Skip templating process]' \
'--skip-templates[Skip templating process]' \
'(-s --skip-sequences)-u[Only update the current terminal]' \
'(-s --skip-sequences)--update-current[Only update the current terminal]' \
'(-C --config-file -d --config-dir)-N[Won'\''t read the config and avoids creating it'\''s config path]' \
'(-C --config-file -d --config-dir)--no-config[Won'\''t read the config and avoids creating it'\''s config path]' \
'-h[Print help]' \
'--help[Print help]' \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
":: :_wallust__help_commands" \
"*::: :->help" \
&& ret=0

    case $state in
    (help)
        words=($line[1] "${words[@]}")
        (( CURRENT += 1 ))
        curcontext="${curcontext%:*:*}:wallust-help-command-$line[1]:"
        case $line[1] in
            (run)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(cs)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(theme)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(migrate)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(debug)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(pywal)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
(help)
_arguments "${_arguments_options[@]}" : \
&& ret=0
;;
        esac
    ;;
esac
;;
        esac
    ;;
esac
}

(( $+functions[_wallust_commands] )) ||
_wallust_commands() {
    local commands; commands=(
'run:Generate a palette from an image' \
'cs:Apply a certain colorscheme' \
'theme:Apply a custom built in theme' \
'migrate:Migrate v2 config to v3 (might lose comments,)' \
'debug:Print information about the program and the enviroment it uses' \
'pywal:A drop-in cli replacement for pywal' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'wallust commands' commands "$@"
}
(( $+functions[_wallust__cs_commands] )) ||
_wallust__cs_commands() {
    local commands; commands=()
    _describe -t commands 'wallust cs commands' commands "$@"
}
(( $+functions[_wallust__debug_commands] )) ||
_wallust__debug_commands() {
    local commands; commands=()
    _describe -t commands 'wallust debug commands' commands "$@"
}
(( $+functions[_wallust__help_commands] )) ||
_wallust__help_commands() {
    local commands; commands=(
'run:Generate a palette from an image' \
'cs:Apply a certain colorscheme' \
'theme:Apply a custom built in theme' \
'migrate:Migrate v2 config to v3 (might lose comments,)' \
'debug:Print information about the program and the enviroment it uses' \
'pywal:A drop-in cli replacement for pywal' \
'help:Print this message or the help of the given subcommand(s)' \
    )
    _describe -t commands 'wallust help commands' commands "$@"
}
(( $+functions[_wallust__help__cs_commands] )) ||
_wallust__help__cs_commands() {
    local commands; commands=()
    _describe -t commands 'wallust help cs commands' commands "$@"
}
(( $+functions[_wallust__help__debug_commands] )) ||
_wallust__help__debug_commands() {
    local commands; commands=()
    _describe -t commands 'wallust help debug commands' commands "$@"
}
(( $+functions[_wallust__help__help_commands] )) ||
_wallust__help__help_commands() {
    local commands; commands=()
    _describe -t commands 'wallust help help commands' commands "$@"
}
(( $+functions[_wallust__help__migrate_commands] )) ||
_wallust__help__migrate_commands() {
    local commands; commands=()
    _describe -t commands 'wallust help migrate commands' commands "$@"
}
(( $+functions[_wallust__help__pywal_commands] )) ||
_wallust__help__pywal_commands() {
    local commands; commands=()
    _describe -t commands 'wallust help pywal commands' commands "$@"
}
(( $+functions[_wallust__help__run_commands] )) ||
_wallust__help__run_commands() {
    local commands; commands=()
    _describe -t commands 'wallust help run commands' commands "$@"
}
(( $+functions[_wallust__help__theme_commands] )) ||
_wallust__help__theme_commands() {
    local commands; commands=()
    _describe -t commands 'wallust help theme commands' commands "$@"
}
(( $+functions[_wallust__migrate_commands] )) ||
_wallust__migrate_commands() {
    local commands; commands=()
    _describe -t commands 'wallust migrate commands' commands "$@"
}
(( $+functions[_wallust__pywal_commands] )) ||
_wallust__pywal_commands() {
    local commands; commands=()
    _describe -t commands 'wallust pywal commands' commands "$@"
}
(( $+functions[_wallust__run_commands] )) ||
_wallust__run_commands() {
    local commands; commands=()
    _describe -t commands 'wallust run commands' commands "$@"
}
(( $+functions[_wallust__theme_commands] )) ||
_wallust__theme_commands() {
    local commands; commands=()
    _describe -t commands 'wallust theme commands' commands "$@"
}

if [ "$funcstack[1]" = "_wallust" ]; then
    _wallust "$@"
else
    compdef _wallust wallust
fi
